import{j as e}from"./index-BDrdAJGi.js";let r={title:"Two factor authentication",description:"Use TOTP to add an additional layer of security to your accounts."},h=[],a={contents:[{heading:void 0,content:"Tinyauth has built-in support for TOTP, enabling the use of authenticator apps to generate 2FA codes for logging in."},{heading:"generating-the-secret",content:"A TOTP secret must first be generated. This requires the current username:hash. Use the Tinyauth CLI to create the new user:"},{heading:"generating-the-secret",content:"The command prompts for the user and generates a QR code to scan with an authenticator app. Once added, copy the newly generated user (displayed after the user= log message) and include it in the Tinyauth user list. Restart the service to apply changes. From this point, logging in will require a TOTP code."},{heading:"verifying-the-user",content:"To verify the user configuration, the following command can be used:"},{heading:"verifying-the-user",content:"The command prompts for the username:hash:totp, username, password, and a TOTP code from the authenticator app. If successful, a user verified message is displayed."}],headings:[{id:"generating-the-secret",content:"Generating the Secret"},{id:"verifying-the-user",content:"Verifying the User"}]};const d=[{depth:2,url:"#generating-the-secret",title:e.jsx(e.Fragment,{children:"Generating the Secret"})},{depth:2,url:"#verifying-the-user",title:e.jsx(e.Fragment,{children:"Verifying the User"})}];function s(t){const i={code:"code",h2:"h2",p:"p",pre:"pre",span:"span",...t.components};return e.jsxs(e.Fragment,{children:[e.jsx(i.p,{children:"Tinyauth has built-in support for TOTP, enabling the use of authenticator apps to generate 2FA codes for logging in."}),`
`,e.jsx(i.h2,{id:"generating-the-secret",children:"Generating the Secret"}),`
`,e.jsxs(i.p,{children:["A TOTP secret must first be generated. This requires the current ",e.jsx(i.code,{children:"username:hash"}),". Use the Tinyauth CLI to create the new user:"]}),`
`,e.jsx(e.Fragment,{children:e.jsx(i.pre,{className:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabIndex:"0",icon:'<svg viewBox="0 0 24 24"><path d="m 4,4 a 1,1 0 0 0 -0.7070312,0.2929687 1,1 0 0 0 0,1.4140625 L 8.5859375,11 3.2929688,16.292969 a 1,1 0 0 0 0,1.414062 1,1 0 0 0 1.4140624,0 l 5.9999998,-6 a 1.0001,1.0001 0 0 0 0,-1.414062 L 4.7070312,4.2929687 A 1,1 0 0 0 4,4 Z m 8,14 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 8 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" fill="currentColor" /></svg>',children:e.jsx(i.code,{children:e.jsxs(i.span,{className:"line",children:[e.jsx(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"docker"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" run"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" -i"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" -t"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" --rm"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" ghcr.io/steveiliop56/tinyauth:v4"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" totp"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" generate"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" --interactive"})]})})})}),`
`,e.jsxs(i.p,{children:["The command prompts for the user and generates a QR code to scan with an authenticator app. Once added, copy the newly generated user (displayed after the ",e.jsx(i.code,{children:"user="})," log message) and include it in the Tinyauth user list. Restart the service to apply changes. From this point, logging in will require a TOTP code."]}),`
`,e.jsx(i.h2,{id:"verifying-the-user",children:"Verifying the User"}),`
`,e.jsx(i.p,{children:"To verify the user configuration, the following command can be used:"}),`
`,e.jsx(e.Fragment,{children:e.jsx(i.pre,{className:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabIndex:"0",icon:'<svg viewBox="0 0 24 24"><path d="m 4,4 a 1,1 0 0 0 -0.7070312,0.2929687 1,1 0 0 0 0,1.4140625 L 8.5859375,11 3.2929688,16.292969 a 1,1 0 0 0 0,1.414062 1,1 0 0 0 1.4140624,0 l 5.9999998,-6 a 1.0001,1.0001 0 0 0 0,-1.414062 L 4.7070312,4.2929687 A 1,1 0 0 0 4,4 Z m 8,14 a 1,1 0 0 0 -1,1 1,1 0 0 0 1,1 h 8 a 1,1 0 0 0 1,-1 1,1 0 0 0 -1,-1 z" fill="currentColor" /></svg>',children:e.jsx(i.code,{children:e.jsxs(i.span,{className:"line",children:[e.jsx(i.span,{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"},children:"docker"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" run"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" -i"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" -t"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" --rm"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" ghcr.io/steveiliop56/tinyauth:v4"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" user"}),e.jsx(i.span,{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"},children:" verify"}),e.jsx(i.span,{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"},children:" --interactive"})]})})})}),`
`,e.jsxs(i.p,{children:["The command prompts for the ",e.jsx(i.code,{children:"username:hash:totp"}),", username, password, and a TOTP code from the authenticator app. If successful, a user verified message is displayed."]})]})}function l(t={}){const{wrapper:i}=t.components||{};return i?e.jsx(i,{...t,children:e.jsx(s,{...t})}):s(t)}export{l as default,h as extractedReferences,r as frontmatter,a as structuredData,d as toc};
