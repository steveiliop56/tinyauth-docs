import{j as e}from"./index-BDrdAJGi.js";const o="/assets/runtipi-forward-auth-url-B-TYISZR.png";let h={title:"Runtipi",description:"Use Tinyauth with the Runtipi homeserver management platform."},d=[{href:"https://runtipi.io"},{href:"/docs/reference/cli#create-user-command"},{href:"https://runtipi.io/docs/guides/customize-app-config"}],l={contents:[{heading:void 0,content:"Runtipi is an open-source personal homeserver helper designed to manage and run multiple services on a single server. For more details, visit the official website. With its robust proxy features, Runtipi integrates seamlessly with Tinyauth to provide a smooth authentication experience."},{heading:"creating-users-and-oauth-clients",content:'Users can be created using the Tinyauth CLI. Ensure the "format for docker" option is selected to allow Tinyauth to parse the user correctly.'},{heading:"creating-users-and-oauth-clients",content:"The Runtipi app includes inputs for GitHub and Google. To use OAuth, refer to the OAuth guides and note the client IDs and secrets."},{heading:"modifying-the-forward-auth-middleware",content:"By default, Runtipi uses its own login screen for authentication. To replace it with Tinyauth, enable advanced settings:"},{heading:"modifying-the-forward-auth-middleware",content:"Set the forward auth URL to:"},{heading:"modifying-the-forward-auth-middleware",content:"Save the settings and restart Runtipi."},{heading:"modifying-the-forward-auth-middleware",content:"type: info"},{heading:"modifying-the-forward-auth-middleware",content:`From Runtipi version v4, multiple appstore support was added. This may change
the container name. If redirection to the Tinyauth login screen fails, use:
http://tinyauth_migrated-tinyauth-1:3000/api/auth/traefik as the forward
auth URL.`},{heading:"installing-tinyauth",content:"Navigate to the appstore tab, select the Tinyauth app, and fill in the users, OAuth credentials, and other required information. Before installation, enable either the local domain switch or the expose switch to ensure Tinyauth is accessible via a domain. This is necessary for proper cookie handling. Depending on the setup, use either the local domain or the exposed domain as the app URL (ensure HTTPS is used). Complete the installation process."},{heading:"installing-tinyauth",content:"type: info"},{heading:"installing-tinyauth",content:`Additional customization options, such as adding more OAuth providers, are
available through Runtipi's
user-config.`},{heading:"enabling-authentication-for-applications",content:"Authentication can be enabled for any application by opening its settings and toggling the enable authentication switch:"},{heading:"enabling-authentication-for-applications",content:"type: warning"},{heading:"enabling-authentication-for-applications",content:`For authentication to function correctly, ensure the local domain or exposed
domain shares the same root-level domain as Tinyauth. For example,
tinyauth.example.com and nginx.example.com will work, but
tinyauth.domain1.com and nginx.domain2.com will not.`}],headings:[{id:"creating-users-and-oauth-clients",content:"Creating Users and OAuth Clients"},{id:"modifying-the-forward-auth-middleware",content:"Modifying the Forward Auth Middleware"},{id:"installing-tinyauth",content:"Installing Tinyauth"},{id:"enabling-authentication-for-applications",content:"Enabling Authentication for Applications"}]};const c=[{depth:2,url:"#creating-users-and-oauth-clients",title:e.jsx(e.Fragment,{children:"Creating Users and OAuth Clients"})},{depth:2,url:"#modifying-the-forward-auth-middleware",title:e.jsx(e.Fragment,{children:"Modifying the Forward Auth Middleware"})},{depth:2,url:"#installing-tinyauth",title:e.jsx(e.Fragment,{children:"Installing Tinyauth"})},{depth:2,url:"#enabling-authentication-for-applications",title:e.jsx(e.Fragment,{children:"Enabling Authentication for Applications"})}];function a(n){const t={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",span:"span",...n.components},{Callout:i}=t;return i||s("Callout"),e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Runtipi is an open-source personal homeserver helper designed to manage and run multiple services on a single server. For more details, visit the ",e.jsx(t.a,{href:"https://runtipi.io",children:"official website"}),". With its robust proxy features, Runtipi integrates seamlessly with Tinyauth to provide a smooth authentication experience."]}),`
`,e.jsx(t.h2,{id:"creating-users-and-oauth-clients",children:"Creating Users and OAuth Clients"}),`
`,e.jsxs(t.p,{children:["Users can be created using the Tinyauth ",e.jsx(t.a,{href:"/docs/reference/cli#create-user-command",children:"CLI"}),'. Ensure the "format for docker" option is selected to allow Tinyauth to parse the user correctly.']}),`
`,e.jsx(t.p,{children:"The Runtipi app includes inputs for GitHub and Google. To use OAuth, refer to the OAuth guides and note the client IDs and secrets."}),`
`,e.jsx(t.h2,{id:"modifying-the-forward-auth-middleware",children:"Modifying the Forward Auth Middleware"}),`
`,e.jsx(t.p,{children:"By default, Runtipi uses its own login screen for authentication. To replace it with Tinyauth, enable advanced settings:"}),`
`,e.jsx("img",{src:"/screenshots/runtipi-enable-advanced-settings.png",alt:"Enable advanced settings",width:"256"}),`
`,e.jsx(t.p,{children:"Set the forward auth URL to:"}),`
`,e.jsx(e.Fragment,{children:e.jsx(t.pre,{className:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabIndex:"0",icon:'<svg viewBox="0 0 24 24"><path d="M 6,1 C 4.354992,1 3,2.354992 3,4 v 16 c 0,1.645008 1.354992,3 3,3 h 12 c 1.645008,0 3,-1.354992 3,-3 V 8 7 A 1.0001,1.0001 0 0 0 20.707031,6.2929687 l -5,-5 A 1.0001,1.0001 0 0 0 15,1 h -1 z m 0,2 h 7 v 3 c 0,1.645008 1.354992,3 3,3 h 3 v 11 c 0,0.564129 -0.435871,1 -1,1 H 6 C 5.4358712,21 5,20.564129 5,20 V 4 C 5,3.4358712 5.4358712,3 6,3 Z M 15,3.4140625 18.585937,7 H 16 C 15.435871,7 15,6.5641288 15,6 Z" fill="currentColor" /></svg>',children:e.jsx(t.code,{children:e.jsx(t.span,{className:"line",children:e.jsx(t.span,{children:"http://tinyauth:3000/api/auth/traefik"})})})})}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{alt:"Set forward auth URL",src:o,placeholder:"blur"})}),`
`,e.jsx(t.p,{children:"Save the settings and restart Runtipi."}),`
`,e.jsx(i,{type:"info",children:e.jsxs(t.p,{children:[`From Runtipi version v4, multiple appstore support was added. This may change
the container name. If redirection to the Tinyauth login screen fails, use:
`,e.jsx(t.code,{children:"http://tinyauth_migrated-tinyauth-1:3000/api/auth/traefik"}),` as the forward
auth URL.`]})}),`
`,e.jsx(t.h2,{id:"installing-tinyauth",children:"Installing Tinyauth"}),`
`,e.jsx(t.p,{children:"Navigate to the appstore tab, select the Tinyauth app, and fill in the users, OAuth credentials, and other required information. Before installation, enable either the local domain switch or the expose switch to ensure Tinyauth is accessible via a domain. This is necessary for proper cookie handling. Depending on the setup, use either the local domain or the exposed domain as the app URL (ensure HTTPS is used). Complete the installation process."}),`
`,e.jsx(i,{type:"info",children:e.jsxs(t.p,{children:[`Additional customization options, such as adding more OAuth providers, are
available through Runtipi's
`,e.jsx(t.a,{href:"https://runtipi.io/docs/guides/customize-app-config",children:"user-config"}),"."]})}),`
`,e.jsx(t.h2,{id:"enabling-authentication-for-applications",children:"Enabling Authentication for Applications"}),`
`,e.jsx(t.p,{children:"Authentication can be enabled for any application by opening its settings and toggling the enable authentication switch:"}),`
`,e.jsx("img",{src:"/screenshots/runtipi-install-app-example.png",alt:"Install app example",width:"512"}),`
`,e.jsx(i,{type:"warning",children:e.jsxs(t.p,{children:[`For authentication to function correctly, ensure the local domain or exposed
domain shares the same root-level domain as Tinyauth. For example,
`,e.jsx(t.code,{children:"tinyauth.example.com"})," and ",e.jsx(t.code,{children:"nginx.example.com"}),` will work, but
`,e.jsx(t.code,{children:"tinyauth.domain1.com"})," and ",e.jsx(t.code,{children:"nginx.domain2.com"})," will not."]})})]})}function u(n={}){const{wrapper:t}=n.components||{};return t?e.jsx(t,{...n,children:e.jsx(a,{...n})}):a(n)}function s(n,t){throw new Error("Expected component `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}export{u as default,d as extractedReferences,h as frontmatter,l as structuredData,c as toc};
