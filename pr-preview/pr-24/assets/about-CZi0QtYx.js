import{j as e}from"./index-BDrdAJGi.js";let s={title:"About",description:"A few words about Tinyauth."},o=[],r={contents:[{heading:void 0,content:"Before installing Tinyauth, it is natural to ask, Why choose Tinyauth over Authelia, Authentik, or Keycloak? This is a valid question, and the answer lies in its simplicity and focus."},{heading:"the-challenge-of-authentication-in-homelabs",content:"An authentication middleware is often used to protect applications that lack built-in login screens or to add an extra layer of security. While projects like Authelia, Authentik, and Keycloak are capable solutions, they can be challenging to configure for new users, resource-intensive (as they are designed for enterprise use), or cumbersome to set up and maintain. Tinyauth addresses these challenges."},{heading:"the-motivation-behind-tinyauth",content:"Tinyauth was developed as a personal challenge to create a robust application and to resolve the common issues faced with existing authentication solutions. Many alternatives lacked out-of-the-box support for Traefik's forward authentication and required additional plugins and containers. Tinyauth was designed with simplicity as its core principle—no complex dashboards, no intricate configuration files, and no external dependencies. Everything is configured using straightforward environment variables."},{heading:"suitable-use-cases",content:"Tinyauth is not intended for production environments. Its primary purpose is to add a login screen to applications in homelabs or to facilitate resource sharing with family and friends. For scenarios requiring advanced user management, Authentik is recommended."},{heading:"future-direction",content:"Tinyauth has reached a mature state, supporting essential features such as OAuth, TOTP, LDAP, and access controls. It integrates seamlessly with popular proxies like Nginx, Traefik, and Caddy. The focus will remain on maintaining this simplicity while introducing quality-of-life updates. There are no plans to introduce dashboards or complex configuration files, preserving the project's foundational idea."}],headings:[{id:"the-challenge-of-authentication-in-homelabs",content:"The Challenge of Authentication in Homelabs"},{id:"the-motivation-behind-tinyauth",content:"The Motivation Behind Tinyauth"},{id:"suitable-use-cases",content:"Suitable Use Cases"},{id:"future-direction",content:"Future Direction"}]};const l=[{depth:2,url:"#the-challenge-of-authentication-in-homelabs",title:e.jsx(e.Fragment,{children:"The Challenge of Authentication in Homelabs"})},{depth:2,url:"#the-motivation-behind-tinyauth",title:e.jsx(e.Fragment,{children:"The Motivation Behind Tinyauth"})},{depth:2,url:"#suitable-use-cases",title:e.jsx(e.Fragment,{children:"Suitable Use Cases"})},{depth:2,url:"#future-direction",title:e.jsx(e.Fragment,{children:"Future Direction"})}];function n(i){const t={em:"em",h2:"h2",p:"p",...i.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Before installing Tinyauth, it is natural to ask, ",e.jsx(t.em,{children:"Why choose Tinyauth over Authelia, Authentik, or Keycloak?"})," This is a valid question, and the answer lies in its simplicity and focus."]}),`
`,e.jsx(t.h2,{id:"the-challenge-of-authentication-in-homelabs",children:"The Challenge of Authentication in Homelabs"}),`
`,e.jsx(t.p,{children:"An authentication middleware is often used to protect applications that lack built-in login screens or to add an extra layer of security. While projects like Authelia, Authentik, and Keycloak are capable solutions, they can be challenging to configure for new users, resource-intensive (as they are designed for enterprise use), or cumbersome to set up and maintain. Tinyauth addresses these challenges."}),`
`,e.jsx(t.h2,{id:"the-motivation-behind-tinyauth",children:"The Motivation Behind Tinyauth"}),`
`,e.jsx(t.p,{children:"Tinyauth was developed as a personal challenge to create a robust application and to resolve the common issues faced with existing authentication solutions. Many alternatives lacked out-of-the-box support for Traefik's forward authentication and required additional plugins and containers. Tinyauth was designed with simplicity as its core principle—no complex dashboards, no intricate configuration files, and no external dependencies. Everything is configured using straightforward environment variables."}),`
`,e.jsx(t.h2,{id:"suitable-use-cases",children:"Suitable Use Cases"}),`
`,e.jsx(t.p,{children:"Tinyauth is not intended for production environments. Its primary purpose is to add a login screen to applications in homelabs or to facilitate resource sharing with family and friends. For scenarios requiring advanced user management, Authentik is recommended."}),`
`,e.jsx(t.h2,{id:"future-direction",children:"Future Direction"}),`
`,e.jsx(t.p,{children:"Tinyauth has reached a mature state, supporting essential features such as OAuth, TOTP, LDAP, and access controls. It integrates seamlessly with popular proxies like Nginx, Traefik, and Caddy. The focus will remain on maintaining this simplicity while introducing quality-of-life updates. There are no plans to introduce dashboards or complex configuration files, preserving the project's foundational idea."})]})}function h(i={}){const{wrapper:t}=i.components||{};return t?e.jsx(t,{...i,children:e.jsx(n,{...i})}):n(i)}export{h as default,o as extractedReferences,s as frontmatter,r as structuredData,l as toc};
